#BlueJ class context
comment0.params=
comment0.target=Game()
comment0.text=\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\n
comment1.params=
comment1.target=void\ resetValues()
comment10.params=
comment10.target=void\ displayMap()
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ resetRoom()
comment3.params=
comment3.target=void\ createRooms()
comment3.text=\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\n
comment4.params=
comment4.target=void\ play()
comment4.text=\n\ \ Main\ play\ routine.\ \ Loops\ until\ end\ of\ play.\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\n
comment6.params=command
comment6.target=boolean\ processCommand(Command)
comment6.text=\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\n\ @param\ command\ The\ command\ to\ be\ processed.\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\n
comment7.params=
comment7.target=void\ printHelp()
comment7.text=\n\ Print\ out\ some\ help\ information.\n\ Here\ we\ print\ a\ list\ of\ the\ \n\ command\ words.\n
comment8.params=command
comment8.target=void\ goRoom(Command)
comment8.text=\ \n\ Try\ to\ go\ in\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\n\ room,\ otherwise\ print\ an\ error\ message.\n
comment9.params=command
comment9.target=boolean\ quit(Command)
comment9.text=\ \n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\n\ whether\ we\ really\ quit\ the\ game.\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\n
numComments=12
